<idea-plugin>
    <id>com.redhat.devtools.lsp4ij</id>
    <name>LSP4IJ</name>
    <version>1.0</version>
    <vendor email="developers@redhat.com" url="https://github.com/redhat-developer/lsp4ij/issues">Red-Hat</vendor>

    <change-notes><![CDATA[
    <h3>0.0.1</h3>
    <ul>
      <li>Initial release</li>
    </ul>    
    Learn more in the <a href="https://github.com/redhat-developer/lsp4ij/milestone/1?closed=1">changelog</a>.
  ]]>
    </change-notes>
    <description>
        <![CDATA[
    <p>
        <a href="https://github.com/redhat-developer/lsp4ij">LSP4IJ</a>
        is a free and open-source <a href="https://microsoft.github.io/language-server-protocol/">Language Server
        protocol (LSP)
    </a> client compatible with all flavors of IntelliJ.
    </p>

    <p>It allows you to integrate any <code>language server</code> that communicates with its client via <code>stdio</code>:
    </p>
    <ul>
        <li>by <code>developing an IntelliJ plugin</code> with LSP <code>extension points</code>:
            <ul>
                <li>
                    <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/DeveloperGuide.md#declare-server-with-extension-point">
                        com.redhat.devtools.lsp4ij.server
                    </a>
                    extension point to define a language server.
                </li>
                <li>
                    <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/DeveloperGuide.md#declare-language-mapping-with-extension-point">
                        com.redhat.devtools.lsp4ij.languageMapping
                    </a>
                    to associate an IntelliJ language with a language server definition.
                </li>
            </ul>
        </li>
        <li>by manually adding <a
                href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/UserDefinedLanguageServer.md">language
            server definitions</a>, supporting custom server settings. This approach doesn't require developing a
            specific IntelliJ plugin.
        </li>
    </ul>

    <p>LSP4IJ also provides:</p>
    <ul>
        <li>An <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/UserGuide.md#lsp-console">LSP Consoles
            view
        </a> to track LSP requests, responses, and notifications in a console.
        </li>
        <li>A <a
                href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/UserGuide.md#language-servers-preferences">
            Language Servers preferences page
        </a> to configure the LSP trace level and the debug port to use to debug the language server.
        </li>
    </ul>

    <p>You can find more documentation in:
        <ul>
            <li>
                <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/DeveloperGuide.md">the developer guide
                </a>,
                providing step-by-step instructions on how to integrate a language server in LSP4IJ, in an external IntelliJ plugin.
            </li>
            <li>
                <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/UserDefinedLanguageServer.md">the User-defined language server documentation
                </a>, explaining how to integrate a language server in LSP4IJ with a few settings.
            </li>
            <li>
                <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/UserGuide.md">the user guide</a>, explaining how to use the
                 LSP console and Language Server preferences.
            </li>
            <li>
                <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/LSPSupport.md">the LSP Support overview</a>, describing which LSP features are implemented, and how.
            </li>
        </ul>
    </p>
    ]]>
    </description>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.redhat.devtools.intellij.telemetry</depends>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="231"/>

    <!-- LSP extension points -->
    <extensionPoints>

        <!-- Language server extension point -->
        <extensionPoint
                name="server"
                beanClass="com.redhat.devtools.lsp4ij.server.definition.extension.ServerExtensionPointBean">
            <with attribute="factoryClass" implements="com.redhat.devtools.lsp4ij.LanguageServerFactory"/>
        </extensionPoint>

        <!-- Language server mappings extension point -->
        <extensionPoint
                name="languageMapping"
                beanClass="com.redhat.devtools.lsp4ij.server.definition.extension.LanguageMappingExtensionPointBean">
            <with attribute="documentMatcher" implements="com.redhat.devtools.lsp4ij.DocumentMatcher"/>
        </extensionPoint>
        <extensionPoint
                name="fileTypeMapping"
                beanClass="com.redhat.devtools.lsp4ij.server.definition.extension.FileTypeMappingExtensionPointBean">
            <with attribute="documentMatcher" implements="com.redhat.devtools.lsp4ij.DocumentMatcher"/>
        </extensionPoint>
        <extensionPoint
                name="fileNamePatternMapping"
                beanClass="com.redhat.devtools.lsp4ij.server.definition.extension.FileNamePatternMappingExtensionPointBean">
            <with attribute="documentMatcher" implements="com.redhat.devtools.lsp4ij.DocumentMatcher"/>
        </extensionPoint>
    </extensionPoints>

    <!-- Language Server support -->
    <extensions defaultExtensionNs="com.intellij">

        <!-- LSP application services -->
        <applicationService
                serviceImplementation="com.redhat.devtools.lsp4ij.LanguageServersRegistry"/>
        <applicationService
                id="com.redhat.devtools.lsp4ij.launching.UserDefinedLanguageServerSettings"
                serviceImplementation="com.redhat.devtools.lsp4ij.launching.UserDefinedLanguageServerSettings"/>
        <applicationService
                id="com.redhat.devtools.lsp4ij.launching.templates.LanguageServerTemplateManager"
                serviceImplementation="com.redhat.devtools.lsp4ij.launching.templates.LanguageServerTemplateManager"/>

        <!-- LSP project services -->
        <projectService
                serviceImplementation="com.redhat.devtools.lsp4ij.LanguageServiceAccessor"/>
        <projectService
                serviceImplementation="com.redhat.devtools.lsp4ij.lifecycle.LanguageServerLifecycleManager"/>
        <projectService
                serviceImplementation="com.redhat.devtools.lsp4ij.usages.LSPUsagesManager"/>

        <!-- LSP textDocument/publishDiagnostics notification support -->
        <externalAnnotator
                id="LSPDiagnosticAnnotator"
                language=""
                implementationClass="com.redhat.devtools.lsp4ij.features.diagnostics.LSPDiagnosticAnnotator"/>

        <!-- LSP textDocument/completion request support -->
        <completion.contributor
                id="LSPCompletionContributor"
                language="any"
                implementationClass="com.redhat.devtools.lsp4ij.features.completion.LSPCompletionContributor"
                order="first"/>

        <!-- LSP textDocument/definition request support -->
        <gotoDeclarationHandler
                id="LSPGotoDeclarationHandler"
                implementation="com.redhat.devtools.lsp4ij.features.navigation.LSPGotoDeclarationHandler"/>

        <!-- LSP textDocument/documentLink request support -->
        <externalAnnotator
                id="LSPDocumentLinkAnnotator"
                language=""
                implementationClass="com.redhat.devtools.lsp4ij.features.documentLink.LSPDocumentLinkAnnotator"/>
        <gotoDeclarationHandler
                id="LSPDocumentLinkGotoDeclarationHandler"
                implementation="com.redhat.devtools.lsp4ij.features.documentLink.LSPDocumentLinkGotoDeclarationHandler"/>

        <!-- LSP textDocument/documentHighlight request support -->
        <highlightUsagesHandlerFactory
                id="LSPHighlightUsagesHandlerFactory"
                implementation="com.redhat.devtools.lsp4ij.features.highlight.LSPHighlightUsagesHandlerFactory"/>

        <!-- LSP textDocument/codeLens request support -->
        <codeInsight.codeVisionProviderFactory
                implementation="com.redhat.devtools.lsp4ij.features.codeLens.DummyCodeVisionProviderFactory" />
        <config.codeVisionGroupSettingProvider
            implementation="com.redhat.devtools.lsp4ij.features.codeLens.LSPCodeLensSettingsProvider" />
        <codeInsight.codeVisionProvider
                id="LSPCodeLensProvider"
                implementation="com.redhat.devtools.lsp4ij.features.codeLens.LSPCodeLensProvider"/>

        <!-- LSP textDocument/inlayHint + textDocument/colorInformation requests support -->
        <codeInsight.inlayProviderFactory
                id="LSPInlayHintProvidersFactory"
                implementation="com.redhat.devtools.lsp4ij.features.LSPInlayHintProvidersFactory"/>

        <!-- LSP textDocument/hover request support -->
        <!-- This hover support works only if there are no language which defines a 'lang.documentationProvider'. In case if it exists a
             'lang.documentationProvider' for the language, you need to declare in your plugin.xml

            <lang.documentationProvider
                language="MyLanguage"
                implementationClass="com.redhat.devtools.lsp4ij.features.documentation.LSPDocumentationProvider"
                order="first"/>
        -->
        <documentationProvider
                id="LSPTextHover"
                implementation="com.redhat.devtools.lsp4ij.features.documentation.LSPDocumentationProvider"
                order="first"/>

        <!-- LSP textDocument/folding -->
        <lang.foldingBuilder id="LSPFoldingBuilderForText"
                             language="TEXT"
                             implementationClass="com.redhat.devtools.lsp4ij.features.foldingRange.LSPFoldingRangeBuilder"
                             order="first"/>

        <lang.foldingBuilder id="LSPFoldingBuilderForTextMate"
                             language="textmate"
                             implementationClass="com.redhat.devtools.lsp4ij.features.foldingRange.LSPFoldingRangeBuilder"
                             order="first"/>

        <!-- LSP textDocument/signatureHelp -->
        <codeInsight.parameterInfo
                id="LSPParameterInfoHandlerForTEXT"
                language="TEXT"
                implementationClass="com.redhat.devtools.lsp4ij.features.signatureHelp.LSPParameterInfoHandler"/>

        <codeInsight.parameterInfo
                id="LSPParameterInfoHandlerForTextMate"
                language="textmate"
                implementationClass="com.redhat.devtools.lsp4ij.features.signatureHelp.LSPParameterInfoHandler"/>

        <!-- LSP textDocument/formatting + textDocument/rangeFormatting request support -->
        <formattingService
                id="LSPFormattingOnlyService"
                implementation="com.redhat.devtools.lsp4ij.features.formatting.LSPFormattingOnlyService"/>
        <formattingService
                id="LSPFormattingAndRangeBothService"
                implementation="com.redhat.devtools.lsp4ij.features.formatting.LSPFormattingAndRangeBothService"/>

        <!-- LSP Find Usages (LSP) support shows:
             - textDocument/declaration
             - textDocument/definition
             - textDocument/typeDefinition
             - textDocument/references
             - textDocument/implementation
        -->
        <elementDescriptionProvider
                implementation="com.redhat.devtools.lsp4ij.usages.LSPUsageElementDescriptionProvider"/>
        <customUsageSearcher
                implementation="com.redhat.devtools.lsp4ij.usages.LSPUsageSearcher"/>
        <usageTargetProvider
                order="last"
                implementation="com.redhat.devtools.lsp4ij.usages.LSPUsageTargetProvider"/>
        <findUsagesHandlerFactory
                implementation="com.redhat.devtools.lsp4ij.usages.LSPFindUsagesHandlerFactory"/>
        <usageTypeProvider
                implementation="com.redhat.devtools.lsp4ij.usages.LSPUsageTypeProvider"/>

        <!-- LSP textDocument/rename request support -->
        <renameHandler
                id="LSPRenameHandler"
                implementation="com.redhat.devtools.lsp4ij.features.rename.LSPRenameHandler"
                order="first"/>

        <!-- willRenameFiles support -->
        <renamePsiElementProcessor
                implementation="com.redhat.devtools.lsp4ij.features.refactoring.LSPRenamePsiElementProcessor"
                order="last"/>

        <!-- Code Action support-->
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction0</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction1</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction2</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction3</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction4</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction5</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction6</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction7</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction8</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction9</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction10</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction11</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction12</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction13</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction14</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction15</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction16</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction17</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction18</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction19</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>

        <notificationGroup
                id="Language Server Protocol"
                displayType="BALLOON"
                hideFromSettings="true"/>
    </extensions>

    <!-- Common LSP Client actions  -->
    <actions>
        <!-- Reuse VS Code action ids while waiting for standardization of LSP commands https://github.com/microsoft/language-server-protocol/issues/788 -->
        <action id="editor.action.triggerSuggest"
                class="com.redhat.devtools.lsp4ij.commands.editor.TriggerSuggestAction"/>
        <action id="editor.action.showReferences"
                class="com.redhat.devtools.lsp4ij.commands.editor.ShowReferencesAction"/>
    </actions>

    <!-- LSP consoles -->
    <extensions defaultExtensionNs="com.intellij">

        <projectConfigurable
                groupId="language"
                id="LanguageServers"
                bundle="messages.LanguageServerBundle"
                nonDefaultProject="true"
                key="language.servers"
                instance="com.redhat.devtools.lsp4ij.settings.LanguageServerListConfigurable"/>
        <projectService
                id="com.redhat.devtools.lsp4ij.settings.UserDefinedLanguageServerSettings"
                serviceImplementation="com.redhat.devtools.lsp4ij.settings.UserDefinedLanguageServerSettings"/>
        <toolWindow
                id="Language Servers"
                anchor="bottom"
                factoryClass="com.redhat.devtools.lsp4ij.console.LSPConsoleToolWindowFactory"
                canCloseContents="false"
                icon="AllIcons.Webreferences.Server"/>

    </extensions>

    <!-- Launch configuration Language servers -->

    <actions resource-bundle="messages.LanguageServerBundle">
        <action
                id="lsp.console.explorer.restart"
                class="com.redhat.devtools.lsp4ij.console.explorer.actions.RestartServerAction"
                icon="AllIcons.Actions.Restart"/>
        <action
                id="lsp.console.explorer.stop"
                class="com.redhat.devtools.lsp4ij.console.explorer.actions.StopServerAction"
                icon="AllIcons.Actions.Suspend"/>
        <action
                id="lsp.console.explorer.pause"
                class="com.redhat.devtools.lsp4ij.console.explorer.actions.PauseServerAction"
                icon="AllIcons.Actions.Pause"/>
        <action
                id="lsp.console.explorer.copy.command"
                class="com.redhat.devtools.lsp4ij.console.explorer.actions.CopyStartServerCommandAction"
                icon="AllIcons.Actions.Copy"/>
    </actions>

    <!-- LSP link handlers -->
    <extensions defaultExtensionNs="com.intellij">
        <codeInsight.linkHandler prefix="#lsp-navigation/"
                                 handlerClass="com.redhat.devtools.lsp4ij.hint.LSPNavigationLinkHandler"/>
    </extensions>

    <!-- LSP application listeners -->
    <applicationListeners>
        <listener
                topic="com.intellij.openapi.project.ProjectManagerListener"
                class="com.redhat.devtools.lsp4ij.ConnectDocumentToLanguageServerSetupParticipant"/>
    </applicationListeners>

    <projectListeners>
        <listener topic="com.intellij.refactoring.listeners.RefactoringEventListener"
                  class="com.redhat.devtools.lsp4ij.features.refactoring.LSPRefactoringListener" />
    </projectListeners>

</idea-plugin>